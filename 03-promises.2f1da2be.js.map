{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXUO,SAASC,cAAc,SAe/BC,iBAAiB,UAAU,SAAAC,GAClCA,EAAIC,iBAKJ,IAJA,IAAMC,EAAgBC,OAAOH,EAAII,cAAcC,SAASC,OAAOC,OAC3DC,EAAaL,OAAOH,EAAII,cAAcC,SAASf,MAAMiB,OACnDE,EAAYN,OAAOH,EAAII,cAAcC,SAASK,KAAKH,OAEhDI,EAAI,EAAGA,GAAKT,EAAeS,IAClCvB,EAAcuB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAEjBJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9D2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAElBJ,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAE9DkB,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst formLink = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformLink.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const inputedAmount = Number(evt.currentTarget.elements.amount.value);\n  let firstDelay = Number(evt.currentTarget.elements.delay.value);\n  const stepDelay = Number(evt.currentTarget.elements.step.value);\n\n  for (let i = 1; i <= inputedAmount; i++) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += stepDelay;\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","evt","preventDefault","inputedAmount","Number","currentTarget","elements","amount","value","firstDelay","stepDelay","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2f1da2be.js.map"}